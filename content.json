{"meta":{"title":"Welcome to TonyYang's Blog","subtitle":"ChuiGe","description":"we have anything you want","author":"TonyYang","url":"http://YangHQ666.com"},"pages":[{"title":"","date":"2017-10-07T10:40:53.000Z","updated":"2017-10-07T10:40:53.000Z","comments":true,"path":"about/index.html","permalink":"http://YangHQ666.com/about/index.html","excerpt":"","text":"关于作者一名硬件和软件都搞的老gay且非常热爱音乐的死肥宅（其实我是喜欢运动的 : ) 目前正在上学，每次考试差点挂科。 热爱搞 音乐`` 撸琴 小技术 。 我在哪里？湖北：WuHan。(欢迎各位过来搞) 关于学习软件硬件都搞，喜欢看看小动物百科，研究研究乐理。近期学习：《如何做到Dota补刀一刀不漏》 《如何在期末考试时转运》 座右铭 不要去想未来，先走好每一步。 喜欢的明星和乐队乐队：AC／DC 和kiss明星： slash和bukethead歌手：li rong hao（偷笑）"}],"posts":[{"title":"字符搜素算法之KMP","slug":"字符串搜素算法","date":"2017-10-11T12:58:51.000Z","updated":"2017-10-12T04:26:25.000Z","comments":true,"path":"2017/10/11/字符串搜素算法/","link":"","permalink":"http://YangHQ666.com/2017/10/11/字符串搜素算法/","excerpt":"","text":"字符串搜索算法今天上数据结构只讲了搜索算法的最基本的一种，并且较优化的搜索算法也没怎么讲，来此研究一番。 kmp算法kmp算法简介KMP算法是一种改进的字符串匹配算法，KMP算法的关键是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是实现一个next()函数，函数本身包含了模式串的局部匹配信息。时间复杂度O(m+n)。​ kmp算法理解 一般匹配字符串时，我们从目标字符串str（假设长度为n）的第一个下标选取和ptr长度（长度为m）一样的子字符串进行比较，如果一样，就返回开始处的下标值，不一样，选取str下一个下标，同样选取长度为n的字符串进行比较，直到str的末尾（实际比较时，下标移动到n-m）。这样的时间复杂度是O(n*m)。 在此之前先推荐一篇文章阮一峰讲解的KMP 看完推荐的blog，他提到一个公式： 12移动位数 = 已匹配的字符数 - 对应的部分匹配值 关于对应的部分匹配值，首先还是先要了解一下什么是前缀和后缀，我也引用他举的例子 字符串 ： “bread” 前缀 ：b，br，bre，brea 后缀：read，ead，ad，d 因此 最长前缀：是说以第一个字符开始，但是不包含最后一个字符。比如： abcjkdabc，那么这个数组的最长前缀和最长后缀相同必然是abc。 cbcbc，最长前缀和最长后缀相同是cbc。 abcbc，最长前缀和最长后缀相同是不存在的。 ​ 了解这些以后，我们在来说公式当中的 对应的部分匹配值 ； 部分匹配值为“最长前缀”和“最长后缀”的共有元素的长度 例如： 搜索词为：ababaca，其中从左到右数的第三个a的部分匹配值为：3；因为它的最长前缀是abab，最长后缀也是baba；所以共有的是aba。 ​ 实例应用给你两个字符串，寻找其中一个字符串是否包含另一个字符串，如果包含，返回包含的起始位置。 如下面两个字符串： 12char *str = &quot;bacbababadababacambabacaddababacasdsd&quot;;char *ptr = &quot;ababaca&quot;; 第一次： bacbababadababacambabacaddababacasdsd ababaca a和b不相等，跳到下一个字符，运行2次后发现第三个不相等……..直到出现下面情况时： bacbababadababacambabacaddababacasdsd ​ ababaca 这时候比较到ptr的第6个元素与str不相等时，程序进行下一次移位，但这次移位就要根据公示来移动： 移动位数 = 已匹配的字符数 - 对应的部分匹配值 ​ 5 （ababa） - 3（aba） =2位；所以下一次移位： bacbababadababacambabacaddababacasdsd ​ ababaca； 对公式的理解其实从实例来看，之所以要减去对应的部分匹配值，是减去了前缀和后缀所重复的部分，在目标字符串str与子字符串ptr有相同部分的情况下，（1个相同而其他不同的直接转到下一个字符），在相同部分中减去了前缀和后缀所重复的部分，这样程序就可以跳过那些确定不能匹配的字符，从而减小时间复杂度（最后附上一张图） （如果1=2=3=4，就直接把3移到4的位置 ：） （完）","categories":[{"name":"算法","slug":"算法","permalink":"http://YangHQ666.com/categories/算法/"}],"tags":[{"name":"搜索算法","slug":"搜索算法","permalink":"http://YangHQ666.com/tags/搜索算法/"}]},{"title":"UItableView使用方法","slug":"UItableView使用方法","date":"2017-10-08T05:28:38.000Z","updated":"2017-10-12T04:29:04.000Z","comments":true,"path":"2017/10/08/UItableView使用方法/","link":"","permalink":"http://YangHQ666.com/2017/10/08/UItableView使用方法/","excerpt":"","text":"UItableView使用方法​ 今天写代码刚好写了下UItableView，写起来也觉得不怎么难，记录一下经常会使用到的几个功能吧！ UItableView的初始化和其他控件一样，UItableView的初始化也是一样的UITableView *settable = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, 375, 667) style:UITableViewStyleGrouped];后面的style——如果你想有分组型的，就用Grouped，如果不想分组，那就选择Plain，之后要设置代理，如果你只设置了一个代理，那么写一个就行了settable.dataSource = self; settable.delegate =self;（记得要在interface后面添加协议）。 UItableView的方法当你写了&lt;UITableViewDataSource&gt;这个协议时候，会出现2个警告，因为这个协议中有2个必须要求执行的方法： 1234567@required- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath; 不过先不着急实现这两个方法，先设置一下有多少组： 123- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView&#123; return 3;&#125; //我这里写的是三组 之后在去写那两个要求的方法： 12345678910111213141516- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section&#123; NSInteger row = 0; if (section == 0) &#123; row = 1; &#125;else if (section == 1)&#123; row = 2; &#125;else &#123; row = 3; &#125; return row;&#125;- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath&#123; //这里一一给cell设置标题和各种属性，这里就不详细叙述 return cell; &#125; TableView的基本属性设置1234567//去掉 cell 上的线 myTableView.separatorStyle = UITableViewCellSeparatorStyleNone;//多余的cell不显示self.myTableView.tableFooterView = [UIView new];//取消cell点击 self.myTableView.allowsSelection = NO; Cell的属性设置和方法1234567891011121314151617181920212223242526// cell 的行高- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath &#123; return 100;&#125;// 选中 cell的 触发方法- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath &#123;// NSLog(@&quot; 我被选中了 %ld, %ld&quot;, indexPath.section, indexPath.row);// 选中时有置灰效果,离开时 选中效果 消失 [tableView deselectRowAtIndexPath:indexPath animated:YES]; //取消cell的点击事件 if (2 == indexPath.row) &#123; //取消某行cell点击事件 Cell.selectionStyle = UITableViewCellSelectionStyleNone; return nightCell; &#125; // 跳转 界面// CellViewController *cellView = [[CellViewController alloc]init];// NSString *str = [NSString stringWithFormat:@&quot;%ld , %ld&quot;, indexPath.section, indexPath.row];// cellView.string =str;// [self.navigationController pushViewController:cellView animated:YES];//给cell设置图片cell.imageView.image = [UIImage imageNamed:@&quot;add&quot;]; 在代码中点击cell后出现提示框（即UIAlert），我是用条件控制的：(以其中任意一个按钮为例) 1234if (indexPath.section == 2 &amp;&amp; indexPath.row == 2) &#123; UIAlertController *alert1 = [UIAlertController alertControllerWithTitle:@&quot;更新完成&quot; message:@&quot;现在已经是最新版本&quot; preferredStyle:UIAlertControllerStyleAlert]; [alert1 addAction:[UIAlertAction actionWithTitle:@&quot;确定&quot; style:UIAlertActionStyleCancel handler:nil]]; [self presentViewController:alert1 animated:YES completion:nil]; UItableView基本上用到的属性和方法差不多也就这些了，欢迎大家补充。 （完）","categories":[{"name":"UI设计","slug":"UI设计","permalink":"http://YangHQ666.com/categories/UI设计/"}],"tags":[{"name":"Objective-C","slug":"Objective-C","permalink":"http://YangHQ666.com/tags/Objective-C/"},{"name":"iOS开发","slug":"iOS开发","permalink":"http://YangHQ666.com/tags/iOS开发/"}]},{"title":"音乐调性","slug":"音乐调性","date":"2017-10-08T05:28:38.000Z","updated":"2017-10-08T08:24:01.000Z","comments":true,"path":"2017/10/08/音乐调性/","link":"","permalink":"http://YangHQ666.com/2017/10/08/音乐调性/","excerpt":"","text":"我们生活中经常会听说这首歌是什么C调什么D调，你知道调是怎么规定的吗？ 基本概念调性（Tonality）是调的主音和调式类别的总称，例如，以C为主音的大调式，其调性即是“C大调”，以a为主音的小调式，其调性就是“a小调”等。以此类推，一般音乐中主要有24个调性。首先就拿大家比较熟悉的C大调开始说起。 关于C大调不同音之间是有距离的，十二平均律将一个八度音程（12345671）分为12等份，每等份称为一个半音，两个半音距离构成一个全音。在一个标准音阶中，除了3-4、7-1之间是半音的距离，其他的相邻两个音之间都是全音的距离。也就是说，他们之间还存在着一个半音距离的音符（如1-2之间有一个1#=2b），加上1#、2#、4#、5#、6#，正好为12等份（不包含最后一个Do），如下图所示。而C大调音阶，就是以C音为1，CDEFGAB的相邻音符距离恰恰和标准音阶1234567的距离一致（全全半全全全半，不用升降号）。因此，C大调是最自然的大调，也是最基础的调。 唱名和音名 唱名：1234567，在简谱首调中出现，没有绝对音高，多用于流行乐。任何人可以根据自己适应的音域从任意高度起唱1（do）。比如男生和女生唱同一段旋律，男生音高一般低于女生，但是由于音符之间的距离相同，我们知道他们唱的是同一首歌曲，可以用同一段简谱记录。 音名：CDEFGAB，指的是五线谱中固定调的绝对音高，多用于古典乐。比如标准音A，其频率为440Hz，音高是固定的，国际公认。交响乐团就是以绝对音高的方式，使得不同乐器能够协调统一。 由于唱名是不固定的，将唱名和固定音高建立起确定的关系，就产生了调。如以C音高度为起音1（do），就称为C大调，G=1，就是G大调。（这里科普一下C的标准音：每秒振动约261次的c音在乐音体系中叫中央c，它位于基本音级首位） 大调和小调之所以要区分大小调，从感官上来讲，是因为乐曲的调式色彩不同。大调一般明朗开阔，小调一般柔和暗淡。那么为什么会产生这种听觉效果呢？源于它们具有不同的音阶结构。大调：1 2 3-4 5 6 7-1全 全 半 全 全 全 半小调：6 7-1 2 3-4 5 6全 半 全 全 半 全 全要满足小调的音程关系，则用首调听起来，小调的起因就是6（la）。因此，D小调就可以简单理解为：以D音为6（la）的调。 怎样判断一首歌是什么调呢？在我们理解上面的概念以后，简而言之判断调性就是：do到底定多高”这么个问题。决定一个有人声的歌曲的调性，肯定是以人声的音域为主要参考，所有乐器都应该是为人生服务的。乐器的音高系统会有影响，比如有首歌依照人声，我想定1=bB，但是伴奏有样乐器是C大调的，演奏不了bB这种音。那么看看人声能不能在1=C时候演唱好这首歌，能行就定成1=C，如果不行那咱们就换个乐器。至于曲风，可能影响比较小吧。可能有的曲风需要旋律线大起大落，音域宽阔，有的曲风旋律线可能比较平直。但我想来这跟定调没有太大的关系吧。（来自知乎大神的解答） 最后，还有一点：多听，多想 （完）","categories":[{"name":"音乐","slug":"音乐","permalink":"http://YangHQ666.com/categories/音乐/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"http://YangHQ666.com/tags/音乐/"},{"name":"乐理","slug":"乐理","permalink":"http://YangHQ666.com/tags/乐理/"}]},{"title":"YHQ","slug":"YHQ","date":"2017-10-06T07:41:27.000Z","updated":"2017-10-06T07:55:54.000Z","comments":true,"path":"2017/10/06/YHQ/","link":"","permalink":"http://YangHQ666.com/2017/10/06/YHQ/","excerpt":"","text":"","categories":[],"tags":[{"name":"你好，欢迎来到我的blog，这里应有尽有","slug":"你好，欢迎来到我的blog，这里应有尽有","permalink":"http://YangHQ666.com/tags/你好，欢迎来到我的blog，这里应有尽有/"}]}]}